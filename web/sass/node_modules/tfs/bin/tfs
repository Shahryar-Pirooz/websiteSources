#!/usr/bin/env node

var program = require('commander');

program
  .command('add [itemspec] [options]', 'Adds files and folders to version control.')
  // .command('branch [olditem] [newitem] [options]', 'Creates a new branch.')
  // .command('branches [itemspec] [options]', 'Displays the history of a branch for a specified file or folder.')
  // .command('changeset [options]', 'Displays information about and lets you change the attributes, such as comments and check-in.')
  .command('checkin [itemspec] [options]', 'Commits pending changes in the current workspace.')
  .command('checkout [itemspec] [options]', 'Makes the local file writable, and changes its status to "edit".')
  // .command('configure [options]', 'Enables an administrator to view and change TFS settings.')
  // .command('delete [itemspec] [options]', 'Removes items from TFS and deletes them.')
  // .command('destroy [options]', 'Permanently delete version-controlled files from TFS.')
  // .command('diff [itemspec] [itemspec2] [options]', 'Displays differences between two local/server files.')
  // .command('dir [itemspec] [options]', 'Displays all or some of the contents of the server for Team Foundation version control.')
  // .command('folderdiff [targetPath] [options]', 'Displays differences between local/server directories.')
  .command('get [itemspec] [options]', 'Get the latest version of files and folders.')
  .command('history [itemspec] [options]', 'Displays the revision history for one or more files, folders or both.')
  .command('info [itemspec] [options]', 'Displays information about items under version control.')
  // .command('label [labelname] [options]', 'Attaches a label to or removes a label from a TFS file or folder.')
  // .command('labels [options]', 'Displays the list of labels in the server for Team Foundation version control.')
  // .command('localversions [itemspec] [options]', 'Displays the version of one or more items in a workspace.')
  // .command('lock [itemspec] [options]', 'Locks or unlocks a file or folder.')
  // .command('merge [source] [destination] [options]', 'Applies changes from one branch into another.')
  // .command('merges [destination] [options]', 'Displays detailed information about past merges.')
  // .command('permission [options]', 'Modifies the user ACL and displays authorization settings.')
  // .command('rename [olditem] [newitem] [options]', 'Rename a file or folder.')
  // .command('resolve [options]', 'Lets you resolve conflicts.')
  // .command('rollback [itemspec] [options]', 'Roll back changesets.')
  // .command('shelve [options]', 'Stores a set of pending changes, together with pending check-in.')
  // .command('shelvesets [shelvesetname] [options]', 'Displays information about a set of shelved changes.')
  .command('status [itemspec] [options]', 'Displays information about pending changes.')
  // .command('undelete [options]', 'Restores items that were previously deleted.')
  .command('undo <itemspec> [options]', 'Removes pending changes from a workspace.')
  // .command('unlabel [labelname] [itemspec] [options]', 'Removes an item from an existing label.')
  // .command('unshelve [itemspec] [options]', 'Restores shelved file revisions, check-in.')
  // .command('view [itemspec] [options]', 'Retrieves a specific version of a file to a temporary folder on your computer and displays it.')
  // .command('workfold [localfolder] [options]', 'Creates, modifies, or displays information about the mappings.')
  // .command('workspace [options]', 'Lets you create, delete, view, or modify properties and mappings associated with a workspace.')
  // .command('workspaces [options]', 'Displays information about workspaces.')
  .parse(process.argv);
