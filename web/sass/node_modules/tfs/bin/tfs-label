#!/usr/bin/env node

var hasError = false,
    program  = require('commander'),
    tfsLabel = require('../lib/tfs/label');

program
  .description('Attaches a label to or removes a label from a version of a file or folder in the server for Team Foundation version control.Required PermissionsTo use the label command, you must have the Label permission set to Allow. To modify or delete labels created by other users, you must have the Administer labels permission set to Allow. For more information, see Team Foundation Server Permissions.')
  .usage('[labelname] [options]')
  .option('-o, --owner', 'Identifies the name of the label to attach, modify, or remove from the specified items.')
  .option('-v, --version', 'Specifies a Team Foundation version control server directory within which the labelname is unique. This parameter lets you independently create, manage, retrieve, and delete one label or set of labeled items when two labels of the same name are in different parts of the Team Foundation version control server.')
  .option('-c, --comment', 'Provides a value such as DOMAIN\\JuanGo or just juango to the /owner option.')
  .option('-c, --child', 'Identifies the file or folder from which to label, re-label, or modify. For more information about how Team Foundation parses itemspecs to determine which items are within scope, see Command-Line Syntax (Version Control). ')
  .option('-r, --recursive', 'Provides a value such as c2 for the /version option. For more information about how Team Foundation parses a version specification to determine which items are within its scope, see Command-Line Syntax (Version Control).')
  .option('-d, --delete', 'A user-provided comment about the label.')
  .option('-l, --login', 'The user-provided path of a file on disk that contains the comment to use for the check-in.')
  .option('-c, --collection', 'Provides a value to the /login option. You can specify a username value as either DOMAIN\\UserName or UserName.')
  .option('-V, --verbose', 'Verbose mode.')
  .parse(process.argv);

var options = {
  owner: program.owner,
  version: program.version,
  comment: program.comment,
  child: program.child,
  recursive: program.recursive,
  delete: program.delete,
  login: program.login,
  collection: program.collection,
  verbose: program.verbose
};

tfsLabel(program.args, options);
