#!/usr/bin/env node

var hasError = false,
    program  = require('commander'),
    tfsBranch = require('../lib/tfs/branch');

program
  .description('The branch command copies an item or set of items, including metadata and version control history, from one location to another in the Team Foundation version control server and in the local workspace.NoteThe results of this command are not reflected in the Team Foundation version control server until you perform a check-in operation. For more information, see Check In Pending Changes.Required PermissionsTo use the branch command, you must have the Read permission for the source item and the Check out and Merge permissions for the target folder set to Allow. For more information, see Team Foundation Server Permissions.')
  .usage('[olditem] [newitem] [options]')
  .option('-v, --version', 'Specifies the name of the source file or folder being branched. The olditem may also contain version information in the format item;version.')
  .option('-l, --lock', 'Specifies the name of the destination file or folder or the parent folder for the destination.  If newitem already exists and is a Team Foundation version control server folder, Team Foundation creates the branched items within it. Otherwise, newitem specifies the name of the destination file or folder. Conflicts can occur during check-in if the destination already exists.')
  .option('-n, --noget', 'Provides a value for the /version option. For more information about how Team Foundation parses a version specification to determine which items are within its scope, see Command-Line Syntax (Version Control).')
  .option('-n, --noprompt', 'Provides a comment about the branch.')
  .option('-s, --silent', 'Specifies the path of a file that contains the comment that is used for the branch.')
  .option('-c, --checkin', 'The user-provided value for the /author option.')
  .option('-c, --comment', 'Provides a value to the /login option. You can specify a username value as either DOMAIN\\UserName or UserName.')
  .option('-a, --author', 'The version of the item at which you want to create the branch. You can specify a version by:')
  .option('-V, --verbose', 'Verbose mode.')
  .parse(process.argv);

var options = {
  version: program.version,
  lock: program.lock,
  noget: program.noget,
  noprompt: program.noprompt,
  silent: program.silent,
  checkin: program.checkin,
  comment: program.comment,
  author: program.author,
  verbose: program.verbose
};

tfsBranch(program.args, options);
