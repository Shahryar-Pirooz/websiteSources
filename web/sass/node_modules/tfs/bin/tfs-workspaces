#!/usr/bin/env node

var hasError = false,
    program  = require('commander'),
    tfsWorkspaces = require('../lib/tfs/workspaces');

program
  .description('Displays information about workspaces in the system and updates cached information about a user name or computer name change on the server that is running Visual Studio Team Foundation Server.Required PermissionsTo use the workspaces command, you must have the Read permission set to Allow. For more information, see Team Foundation Server Permissions.')
  .usage('[options]')
  .option('-o, --owner', 'Provides a value to the /owner option. Specify \"*\" to match workspaces created by any user.')
  .option('-c, --computer', 'Provides a value to the /computer option. Specify \"*\" to match workspaces on any computer.')
  .option('-f, --format', 'Specifies the name of a workspace to display information about. If a workspacename is not specified, information is displayed about all the workspaces in a server. You can also use the \"*\" wildcard character to display information about all workspaces for a server.')
  .option('-u, --updateUserName', 'Provides the old user name for the /updateUserName option.')
  .option('-u, --updateComputerName', 'Provides the old computer name for the /updateComputerName option.')
  .option('-r, --remove', 'The URL of the team project collection that contains the workspaces about which you want to display information (for example, http://myserver:8080/tfs/DefaultCollection).')
  .option('-c, --collection', 'Provides a value to the /login option. You can specify a username value as either DOMAIN\\UserName or UserName.')
  .option('-l, --login', 'Specifies the name of the user who created the workspace. If no owner is specified, Team Foundation returns information about workspaces owned by the current user only.')
  .option('-V, --verbose', 'Verbose mode.')
  .parse(process.argv);

var options = {
  owner: program.owner,
  computer: program.computer,
  format: program.format,
  updateUserName: program.updateUserName,
  updateComputerName: program.updateComputerName,
  remove: program.remove,
  collection: program.collection,
  login: program.login,
  verbose: program.verbose
};

tfsWorkspaces(options);
