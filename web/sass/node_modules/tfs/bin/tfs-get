#!/usr/bin/env node

var hasError = false,
    output   = require('../lib/utils/output'),
    program  = require('commander'),
    tfsGet   = require('../lib/tfs/get');

program
  .description('Get the latest version of files and folders.')
  .usage('[itemspec] [options]')
  .option('-a, --all', 'Rrestore an item that you have accidentally deleted from a server workspace.')
  .option('-f, --force', 'Combines --all and --overwrite.')
  .option('-l, --login [username,[password]]', 'Specifies the user account to run the command.')
  .option('-n, --noprompt', 'Suppresses the display of windows and dialog boxes and redirects output data to the command prompt.')
  .option('-o, --overwrite', 'This option overrides the default behavior and overwrites a writable item, unless the item is checked out.')
  .option('-p, --preview', 'Displays what would occur, without actually performing the Get operation.')
  .option('-r, --recursive', 'Recursively gets items in the specified directory and any subdirectories.')
  .option('-R, --remap', 'See phkelley\'s blog: tf get /remap.')
  .option('-v, --tfs-version', 'Specifies the maximum version, or the minimum and the maximum versions, to display in the history data.')
  .option('-V, --verbose', 'Verbose mode.')
  .parse(process.argv);

var options = {
  all: program.all,
  force: program.force,
  login: program.login,
  noprompt: program.noprompt,
  overwrite: program.overwrite,
  preview: program.preview,
  recursive: program.recursive,
  remap: program.remap,
  verbose: program.verbose,
  version: program.tfsVersion
};

tfsGet(program.args, options, output.callback);
